{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang16393{\fonttbl{\f0\fnil Courier New;}{\f1\fnil\fcharset1 Cambria Math;}{\f2\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue128;\red0\green0\blue0;\red128\green128\blue128;\red255\green255\blue255;}
{\*\generator Riched20 10.0.14393}{\*\mmathPr\mmathFont1\mwrapIndent1440 }\viewkind4\uc1 
\pard\box\brdrdash\brdrw0 \cbpat4\sa200\sl276\slmult1\cf1\b\f0\fs18\lang9 package \cf2\b0 geeksforgeeks.amazon.school.FullProblems;\line\line\cf1\b import \cf2\b0 java.util.*;\line\line\cf3\i /**\line  * Created by erdee on 31-01-2017.\line  */\line\line /*\line * Array Amazon*/\line\line /*\line * Given an array of integers check whether there are two numbers present with given product.\line\line Input:\line\line The first line of input contains an integer T denoting the number of test cases.\line The first line of each test case is N and a product p.\line The second line of each test case contain N number of a[].\line\line Output:\line Print Yes if two numbers product is equal to p else No.\line\line Constraints:\line\line 1 \f1\u8804?\f0\lang9  T \f1\u8804?\f0\lang9  51\line 1 \f1\u8804?\f0\lang9  N \f1\u8804?\f0\lang9  200\line 0 \f1\u8804?\f0\lang9  a[] \f1\u8804?\f0\lang9  1000\line 1 \f1\u8804?\f0\lang9  pro \f1\u8804?\f0\lang9  2000000\line\line Example:\line\line Input:\line\line 2\line\line 5 2\line\line 1 2 3 4 5\line\line 8 46\line\line 5 7 9 22 15 344 92 8\line\line Output:\line\line Yes\line\line No\line * */\line\line /*\line *\line *\line Pair with given product | Set 1 (Find if any pair exists)\line\line Given an array and a number x, find if there is a pair with product equal to x.\line\line Examples :\line\line Input : arr[] = \{10, 20, 9, 40\};\line         int x = 400;\line Output : Yes\line\line Input : arr[] = \{10, 20, 9, 40\};\line         int x = 190;\line Output : No\line\line Input : arr[] = \{-10, 20, 9, -40\};\line         int x = 400;\line Output : Yes\line\line Input : arr[] = \{-10, 20, 9, 40\};\line         int x = -400;\line Output : Yes\line\line Input : arr[] = \{0, 20, 9, 40\};\line         int x = 0;\line Output : Yes\line\line We strongly recommend that you click here and practice it, before moving on to the solution.\line\line Naive approach ( O(n2) ) is to run two loops to consider all possible pairs. For every pair, check if product is equal to x or not.\line // A simple C++ program to find if there is a pair\line // with given product.\line #include<bits/stdc++.h>\line using namespace std;\line\line // Returns true if there is a pair in arr[0..n-1]\line // with product equal to x.\line bool isProduct(int arr[], int n, int x)\line\{\line     // Consider all possible pairs and check for\line     // every pair.\line     for (int i=0; i<n-1; i++)\line        for (int j=i+1; i<n; i++)\line           if (arr[i] * arr[j] == x)\line               return true;\line\line     return false;\line\}\line\line // Driver code\line int main()\line\{\line     int arr[] = \{10, 20, 9, 40\};\line     int x = 400;\line     int n = sizeof(arr)/sizeof(arr[0]);\line     isProduct(arr, n, x)? cout << "Yes\\n"\line                         : cout << "No\\n";\line     x = 190;\line     isProduct(arr, n, x)? cout << "Yes\\n"\line                         : cout << "No\\n";\line     return 0;\line\}*/\line\line\cf1\b\i0 public class \cf2\b0 EqualToProduct \{\line        \cf3\i /* SOLUTION 1\line Correct\line Execution Time:0.457*/\line     /*\line     public static void main (String[] args) \{\line         int T,N,P,arr[];\line         Scanner sc=new Scanner(System.in);\line\line         T=sc.nextInt();\line         for(int i=0;i<T;i++)\{\line             N=sc.nextInt();\line             P=sc.nextInt();\line             arr=new int[N];\line\line             for(int j=0;j<N;j++)\{\line                 arr[j]=sc.nextInt();\line             \}\line             Arrays.sort(arr);\line             System.out.println(findSol(arr,N,P)?"Yes":"No");\line         \}\line     \}\line\line     public static boolean findSol(int arr[],int n,int p)\{\line         int low=0,high=n-1,prd;\line         while(low<high)\{\line             prd=arr[low]*arr[high];\line\line             if(prd<p)\line                 low++;\line             else if(prd>p)\line                 high--;\line             else\line                 return true;\line         \}\line\line         return false;\line     \}*/\line     //----------------------------------------------------------------------------------------\line     /* SOLUTION 2\line Correct\line Execution Time:0.479*/\line /*\line        public static void main (String[] args) \{\line            Scanner scan=new Scanner(System.in);\line            int t=scan.nextInt();\line            for(int i=0;i<t;i++)\line            \{\line                int n=scan.nextInt();\line                int k=scan.nextInt();\line                int a[]= new int[n];\line                for(int j=0;j<n;j++)\line                \{\line                    a[j]=scan.nextInt();\line                \}\line                int flag=0;\line                for(int j=0;j<n;j++)\line                \{\line                    for(int l=j+1;l<n;l++)\line                    \{\line                        int ans=a[j]*a[l];\line                        if(ans==k)\line                        \{\line                            flag=1;\line                            break;\line                        \}\line                    \}\line                \}\line                if(flag==1)\line                    System.out.println("Yes");\line                else\line                    System.out.println("No");\line            \}\line        \}\line */\line\line     //----------------------------------------------------------------------------------------\line     /* SOLUTION 3\line Correct\line Execution Time:0.463*/\line /*\line     public static void main (String[] args) \{\line         Scanner sc=new Scanner(System.in);\line         int T = sc.nextInt();\line         while(T-->0)\{\line             int N = sc.nextInt();\line             int value = sc.nextInt();\line             int[] input = new int[N];\line             for(int i=0;i<N;i++)\{\line                 input[i] = sc.nextInt();\line             \}\line             if(doesKeysExist(input,value))\line                 System.out.println("Yes");\line             else\line                 System.out.println("No");\line\line         \}\line     \}\line\line     public static boolean doesKeysExist(int[] input,int value)\{\line         if(input.length==1) return false;\line\line         boolean exists = false;\line         Map<Integer,Integer> hashing = new HashMap<Integer,Integer>();\line         for(int i:input)\{\line             if(hashing.containsKey(i))\line                 hashing.put(i,hashing.get(i)+1);\line             else\line                 hashing.put(i,1);\line         \}\line\line         if(value==0)\line             return hashing.containsKey(0);\line\line         for(int i:input)\{\line             if(i!=0 && value%i==0)\{\line                 if(value/i==i && hashing.get(i)>1)\line                     exists = true;\line                 else if(value/i!=i && hashing.containsKey(value/i))\line                     exists = true;\line             \}\line         \}\line         return exists;\line     \}\line */\line     //----------------------------------------------------------------------------------------\line     /* SOLUTION 4\line Correct\line Execution Time:0.443*/\line /*\line\line     public static void main (String[] args)\line     \{\line         try(Scanner scanner = new Scanner(System.in))\{\line             int testCases = readInt(scanner);\line             while(testCases-- > 0)\{\line                 String[] input = scanner.nextLine().split(" ");\line                 int size   = Integer.parseInt(input[0]);\line                 int target = Integer.parseInt(input[1]);\line                 int[] array = readArray(size, scanner);\line                 System.out.println(isProductPresent(target, array) ? "Yes" : "No");\line             \}\line         \}\line     \}\line\line     private static boolean isProductPresent(int target, int[] array)\{\line         Set<Integer> hashSet = new HashSet<>();\line         for(int i : array)\{\line             if(i == 0)\{\line                 if(target == 0)\line                     return true;\line             \}\line             else\{\line                 if(hashSet.contains(i))\line                     return true;\line                 if(target / i != 0 && target % i == 0)\{\line                     hashSet.add(i);\line                     hashSet.add(target / i);\line                 \}\line             \}\line         \}\line         return false;\line     \}\line\line     private static int readInt(Scanner scanner)\{\line         return Integer.parseInt(scanner.nextLine());\line     \}\line\line     private static int[] readArray(int size, Scanner scanner) \{\line         String[] input = scanner.nextLine().split(" ");\line         int[] array    = new int[size];\line         for(int i = 0; i < size; i++)\line             array[i] = Integer.parseInt(input[i]);\line         return array;\line     \}\line\line */\line     //----------------------------------------------------------------------------------------\line     /* SOLUTION 5\line Correct\line Execution Time:0.463*/\line\line /*\line     public static void main (String[] args) \{\line\line         Scanner scan = new Scanner(System.in);\line         int t = scan.nextInt();\line         for(int c = 0 ; c < t; c++)\{\line             Set<Integer> set = new HashSet<>();\line             int size = scan.nextInt();\line             if(size > 0)\{\line                 int n = scan.nextInt();\line                 boolean found = false;\line                 for(int i = 0; i < size; ++i)\{\line                     set.add(scan.nextInt());\line                 \}\line                 if(set.contains(1) && set.contains(n))\{\line                     System.out.println("Yes");\line                 \} else \{\line                     for(int i = 2; i < n/i; ++i)\{\line                         if(n % i == 0)\{\line                             if(set.contains(i) && set.contains(n/i))\{\line                                 found = true;\line                                 break;\line                             \}\line                         \}\line                     \}\line                     if(found)\{\line                         System.out.println("Yes");\line                     \} else \{\line                         System.out.println("No");\line                     \}\line                 \}\line\line             \}else \{\line                 System.out.println("No");\line             \}\line\line         \}\line     \}\line */\line\line\line\cf2\i0\}\line\par

\pard\sa200\sl276\slmult1\cf0\f2\fs22\par
}
 